language: minimal

stages:
  - name: fast_check
  - name: build_and_pack
  - name: deploy_to_github
    if: type = push AND branch IN (develop, master)

env:
  global:
    - secure: "Y4eB+FwqFAd9xodmrb5Nej2NTk9PHsuB/LXqLO9YRPRECx2JnmqIbFy9RT9MUbiKUdgH+oZCuj7hiLw3BopLAN3Q6EFxtXust0lzLxnkT+YgZQJCKl70luEGLZb/8dpUrSjgUyiADik/Y+x9nXl1hbzekWytxJDAGo4og6p/qqLK1RDkXzq9FmTamWjRDpwFQ8a+CeFgpfAs62qQz23eVvBKgB8k127htSJBwb0nk3OTJ/cF8YqaopkBpmNA/zL9ju5EKUFQcYC7GfxLiFkWeD44yNvcGrNT2uZFeixBSn73QJgiA0ZEPpCPpZ9PU9irqF/lSHKLjHihanmSBgqZKNLqVHvoW/cp/W/r/WnDMMLvoQlNj/dt+i2tWedOQU57DPBe9+Oo4MEnPOmbUl06D1e2QtRekstaIoNQtKfEY+HJ4m1WvlX9gfAYXu862bCtSbhAJkp3tdE5Vaysdj8zUE2MB9FBI8+6l++skEvcHq4k6Nk4Je3MWQEWnecUVqzDlA7K/8iI/C7T4Yw7KkxOIUgRpnwfYNJyPVPBzFHDhrbpPjs5wGyuMwlQizSNaOsJcE8yY7DMqTkttKPiJdPZZNHL6GmrwRXAXVLISsiE9oxDZUViMhEEH3j4375HqtY2uH6i4aidc7WZ3Ha9cqIN+kyOfFrwS9YbzS1GqJxwnTM="
    - secure: "Tmc4OI2+soVZETmAC/IFI345QGo4WypE0DIp0+3vnkkZQQpilTPoPG86VPXOWgyNtE2QMlgjHuPpoV9ur4+bklY5e8VnWRMtE6Mg6HC+lEeqDRSsW16mp37LoqOT+Pa9oBx5ColEUtOoNAu0fpRRy0b5hinlOWSM8ZMOaELYG/bUL7/964NmtIEZlQoAe272eQo+Dh5TYQvaaPm4yarSoboFWOyyGetpKb/9E6u6fty1QFSthyG8EN1XOGUqh5iya2isTudiEQzB7pJ6FZ/GfNNYqIwl7zLvr4mTbZghyIQs5OZfLw9Y8IMOYfTsKi1mpJ6j3d2qVeL8Vsr7qPODO1q5FdW2F1He2i0pBrMO8Zd3X9LOb3Ov8ErCfqiKuhmEM1xOEcjQWM2MgnAnZe4FU8FBsexubhPNXTB63GYV8A+QzGTyGSIuq+WnJ0yD5NGbvPfhiv1S3hx+SV6Qf4vrk1TlrodegH5ZwnE58oYTY+MjvuFbaEQiLvwq74SCyePE5UQ6hxJOW7yhYFDInZLjDsqXrHqPD9k3bC0gwMWtrWRzZv8URVvMFLqnplRqcEEnPzDSekvULPMe0jYVzuBpK8KIcVlfRfSAprGc/eaEJ/cBo+4c0Xx1XDdUk4N+qDW1TB5BBIr72ntKiDnnvvWatc33r25bERMOLmsDffHPt+0="

jobs:
  include:
    - stage: fast_check
      name: Shell linter
      language: shell
      script:
        - bash -c 'shopt -s globstar; shellcheck -e SC1117 **/*.sh'

    - stage: fast_check
      name: Fast build
      os: linux
      language: minimal
      services:
        - docker
      before_install:
        - docker pull fritzing/build:xenial
      script:
        - docker/build-linux.sh

    - stage: build_and_pack
      os: linux
      language: minimal
      services:
        - docker
      before_install:
        - mkdir -p "$HOME/$TRAVIS_BUILD_NUMBER"
        - ./tools/aws_tasks.sh setup
        - docker pull fritzing/build:xenial
      script:
        - docker/release-linux.sh $TRAVIS_COMMIT-debug-continuous-$TRAVIS_BUILD_NUMBER
        - cp fritzing-"$TRAVIS_COMMIT"-debug-continuous-$TRAVIS_BUILD_NUMBER.linux.AMD64.tar.bz2 "$HOME/$TRAVIS_BUILD_NUMBER/"

      after_success:
        - ./tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      os: osx
      language: cpp
      osx_image: xcode10.2
      cache:
        directories:
          ../libgit2/build

      addons:
        homebrew:
          packages:
          - qt5
          update: false

      before_install:
        - mkdir -p ../libgit2/build
        - wget -q -O - https://github.com/libgit2/libgit2/archive/v0.28.1.tar.gz | tar xz && mv libgit2-0.28.1/* ../libgit2/
        - (cd ../libgit2/build && cmake -D BUILD_SHARED_LIBS=OFF .. && cmake --build .)
        - (cd src/lib && wget -q -O - https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2 | tar xj)
        - xcrun -sdk macosx --show-sdk-path
        - mkdir -p "$HOME/$TRAVIS_BUILD_NUMBER"
        - ./tools/aws_tasks.sh setup
      script:
        - ls /usr/local/opt
        - tools/deploy_fritzing_mac.sh
        - cp ../deploy-app/Fritzing.dmg $HOME/$TRAVIS_BUILD_NUMBER/fritzing-"$TRAVIS_COMMIT"-debug-continuous-$TRAVIS_BUILD_NUMBER.10.2.dmg

      after_success:
        - ./tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      os: osx
      language: cpp
      osx_image: xcode10.1
      cache:
        directories:
          ../libgit2/build

      addons:
        homebrew:
          packages:
          - qt5
          update: true

      before_install:
        - mkdir -p ../libgit2/build
        - wget -q -O - https://github.com/libgit2/libgit2/archive/v0.28.1.tar.gz | tar xz && mv libgit2-0.28.1/* ../libgit2/
        - (cd ../libgit2/build && cmake -D BUILD_SHARED_LIBS=OFF .. && cmake --build .)
        - (cd src/lib && wget -q -O - https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2 | tar xj)
        - xcrun -sdk macosx --show-sdk-path
        - mkdir -p "$HOME/$TRAVIS_BUILD_NUMBER"
        - ./tools/aws_tasks.sh setup

      script:
        - ls /usr/local/opt
        - tools/deploy_fritzing_mac.sh
        - cp ../deploy-app/Fritzing.dmg $HOME/$TRAVIS_BUILD_NUMBER/fritzing-"$TRAVIS_COMMIT"-debug-continuous-$TRAVIS_BUILD_NUMBER.10.1.dmg

      after_success:
        - ./tools/aws_tasks.sh synchronize_up

    - stage: build_and_pack
      os: windows
      language: cpp

      env:
        # - NMAKE_PATH="/c/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/amd64/"
        # /c/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/amd64/nmake.exe
        # /c/Program Files (x86)/Microsoft Visual Studio 14.0/VC/bin/nmake.exe
        # /c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx64/x64/nmake.exe
        # /c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/VC/Tools/MSVC/14.16.27023/bin/Hostx86/x86/nmake.exe
        # - RC_PATH="/c/Program Files (x86)/Windows Kits/10/bin/x64/"
        # /c/Program Files (x86)/Windows Kits/10/bin/x86/
      before_install:
        - curl -L http://download.qt-project.org/official_releases/online_installers/qt-unified-windows-x86-online.exe --output qt-installer.exe
        - ./qt-installer.exe --script ./tools/qt_installer_noninteractive.qs
        - curl -fsSL https://github.com/libgit2/libgit2/archive/v0.28.1.zip -o libgit2.zip && 7z x libgit2.zip && mv libgit2-0.28.1 ../libgit2
        - (mkdir ../libgit2/build64 && cd ../libgit2/build64 && cmake -G "Visual Studio 15 2017 Win64" .. && cmake --build . --config Release)
        - (cd src/lib && curl -L https://dl.bintray.com/boostorg/release/1.70.0/source/boost_1_70_0.tar.bz2 | tar xj)
        # - mkdir -p ~/$TRAVIS_BUILD_NUMBER
        # TODO aws cli can be installed, but PATH is not set correctly. Its more difficult than it sounds.
        # - ./tools/aws_tasks.sh setup

      script:
          - tools/build-windows.bat "$TRAVIS_COMMIT"-debug-continuous-"$TRAVIS_BUILD_NUMBER"
          # - /c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2017/BuildTools/Common7/Tools/VsDevCmd.bat
          # - cat /c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2017/BuildTools/VC/Auxiliary/Build/vcvars64.bat
          # - tools/release_fritzing.bat 0.9.4b 64 2017
          # - export PATH="$NMAKE_PATH:$RC_PATH:$PATH"
          #- cp ..\release*\* ~/$TRAVIS_BUILD_NUMBER

    - stage: deploy_to_github
      before_install:
        - mkdir -p "$HOME/$TRAVIS_BUILD_NUMBER"
        - ./tools/aws_tasks.sh setup
        - ./tools/aws_tasks.sh synchronize_down
      before_deploy:
        - git config --local user.name "Travis C.D."
        - git config --local user.email "travis@fritzing.org"
        - git tag CD-$TRAVIS_BUILD_NUMBER
      deploy:
        provider: releases
        api_key:
          secure: ndzX3gAwth3jsLQobNvYZKERGsP6OjsLNIj/CiIw1eGzJn9Di6bB0aksIBiRU8Sp5zGdMUjxiQk/qgZg/vnce+oUiQM8c1PFgGh1b04W57M8NnnGYsfMa9b8kgEzlmlpP4qSD6SlG5FI29JuOAQqQWHD3ywnsy9tiu5dn84k735gLfTnuIzFmQgvl5zil8G2kMSLMY0EIC8bgWbn8JRsEfBqF7FvbJOmmsww/ADRJx2z6iOhOmTu23qZOIq6GNG8MTyp0jW6yZsNP0Nyum966pqsu6cwyHVuXA4iIRBgE1022PoQfN9F7cLiuskl33xbl5FoKQS7iw7W3wUH0vmyd3XuiBBpoDz2A2iPghMS/7Z31T5rCWgWb9SDDelScz3y9ESlabmmOBVEx633eWtrXG5poiMLJshLyR3d+uCm5C5fIyPn++CxwMkBR/anWMJBlCYX8CYSLBJd5Kz+J/vvc6XTgm1D4+oUYBcrhRs3fiRlKY72RHLy8V3b9ji+oIpnz5ZqguSS1WpF74T+zESyb/dtL0dfAewxmQg1XdOzcmRgWP80Uc3Mxb3laImrBJLSPXi0eR0V5Y0n6RVub3FQOhzNx5+s0jaGbzYJJScKC1eOLbupdSuKEUOG5n4I8IsHTzr3EIzhMyI7vSK0w4bKVdSxLYuVcXV8Bf9Kc+7yZvg=
        file_glob: true
        file: $HOME/$TRAVIS_BUILD_NUMBER/*
        on:
          repo: fritzing/fritzing-app
          branch: develop
        skip_cleanup: true

      after_deploy:
         - ./tools/aws_tasks.sh cleanup
